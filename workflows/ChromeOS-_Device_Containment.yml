name: ChromeOS- Device Containment
provision_on_install: true
trigger:
    next:
        - sensor_platform_is_equal_to_chromeos_75d57a64
    event: Investigatable/EPP
actions:
    add_ou_to_collection_d81f4a3c:
        next:
            - chromeos__move_devices_to_ou_2df55573
        id: functions.CollectionActions.add_ou_to_collection
        properties:
            existing_ou_id: ${chromeos__get_device_info_f2b570fa.API_Integration.Custom_ChromeOS_API.ChromeOS-_Get_Device_Info.body.orgUnitId}
            host_id: ${Trigger.Category.Investigatable.Product.EPP.Sensor.SensorID}
    chromeos___convert_host_id_18d4be81:
        next:
            - chromeos__get_device_info_f2b570fa
        id: functions.ConvertDeviceId.ChromeOS - Convert Host ID
        properties:
            host_id: ${Trigger.Category.Investigatable.Product.EPP.Sensor.SensorID}
    chromeos__get_device_info_f2b570fa:
        next:
            - add_ou_to_collection_d81f4a3c
        id: api_integrations.ChromeOS API.ChromeOS- Get Device Info
        properties:
            params:
                path:
                    customerId: placeholder
                    deviceId: ${chromeos___convert_host_id_18d4be81.FaaS.ConvertDeviceId.ChromeOS-ConvertHostID.device_id}
    chromeos__move_devices_to_ou_2df55573:
        id: api_integrations.ChromeOS API.ChromeOS- Move Devices to OU
        properties:
            json:
                deviceIds:
                    - ${chromeos___convert_host_id_18d4be81.FaaS.ConvertDeviceId.ChromeOS-ConvertHostID.device_id}
            params:
                path:
                    customerId: placeholder
                query:
                    OrgUnitPath: placeholder
conditions:
    sensor_platform_is_equal_to_chromeos_75d57a64:
        next:
            - chromeos___convert_host_id_18d4be81
        expression: Trigger.Category.Investigatable.Product.EPP.Sensor.Platform:'ChromeOS'
        display:
            - Sensor platform is equal to ChromeOS
